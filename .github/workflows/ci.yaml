name: CI – Build & Behave

on:
  push:
    branches: [main]
  pull_request:

permissions:
  contents: read
  packages: write        # allow pushing image to GHCR (optional)
  id-token: write        # OIDC for future deploy steps

env:
  IMAGE_NAME: ${{ github.repository }}          # ghcr.io/<org>/<repo>
  GO_VERSION: '1.24.6'
  PY_VERSION: '3.12'

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:
      # ─────────────── Setup ───────────────
      - name: ⬇️  Check out source
        uses: actions/checkout@v4

      - name: 🏗️  Set up Go
        uses: actions/setup-go@v5          # latest major :contentReference[oaicite:0]{index=0}
        with:
          go-version: ${{ env.GO_VERSION }}
          cache-dependency-path: go.sum    # speeds-up `go mod download`

      - name: 🏗️  Set up Python
        uses: actions/setup-python@v5      # current major :contentReference[oaicite:1]{index=1}
        with:
          python-version: ${{ env.PY_VERSION }}
          cache: pip

      # ─────────────── Build & run image ───────────────
      - name: 🔐  Login to GHCR (harmless on PRs)
        if: github.event_name == 'push'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: 📌 Derive lowercase image name
        id: img
        run: echo "repo=$(echo '${{ github.repository }}' | tr '[:upper:]' '[:lower:]')" >> "$GITHUB_OUTPUT"

      # ─── Build ───
      - name: 🐳  Build web image
        run: |
          docker build \
            --build-arg COMMIT_SHA=${{ github.sha }} \
            -t ghcr.io/${{ steps.img.outputs.repo }}:ci-${{ github.sha }} .

      # ─── Run container ───
      - name: 🚀  Start preview container
        run: |
          docker run -d --name hello-site -p 8080:8080 \
            ghcr.io/${{ steps.img.outputs.repo }}:ci-${{ github.sha }}

      - name: ⏳  Wait for /healthz
        run: |
          for i in {1..30}; do
            if curl -sf http://localhost:8080/healthz; then
              echo "✅ App is healthy"; exit 0
            fi
            echo "Waiting…"; sleep 2
          done
          echo "❌ Health check failed"; exit 1

      # ─────────────── Behave BDD ───────────────
      - name: 📦  Install test deps from requirements.txt
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt


      - name: ✅  Run behave scenarios
        run: behave --tags ~@wip

      # ─────────────── Failure diagnostics ───────────────
      - name: ☠️  Dump container logs on failure
        if: failure()
        run: docker logs hello-site || true

      - name: 📤  Push image to GHCR
        if: |
          github.event_name == 'push' &&         # never run on PRs
          github.ref == 'refs/heads/main' &&     # only on main branch
          success()                              # only if all prior steps are green
        run: |
          IMAGE=ghcr.io/${{ steps.img.outputs.repo }}:ci-${{ github.sha }}

          # Push the commit-tagged image
          docker push "$IMAGE"

          # Optionally also tag + push ":latest"
          docker tag "$IMAGE" ghcr.io/${{ steps.img.outputs.repo }}:latest
          docker push ghcr.io/${{ steps.img.outputs.repo }}:latest